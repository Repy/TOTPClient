<?xml version="1.0" encoding="UTF-8"?>
<project name="build-jar" xmlns:fx="javafx:com.sun.javafx.tools.ant">
	<description></description>
	<property name="javajar.global.debug" value="false" />

	<property name="javajar.project.name" value="${ant.project.name}" />
	<tstamp>
		<format property="javajar.project.version" pattern="yyyyMMddhhmmssSSS" />
	</tstamp>
	<!-- property name="javajar.project.noexe" value="true" -->
	<!-- property name="javajar.project.mainclass" value="" -->

	<property name="javajar.source.java" value="src" />
	<property name="javajar.source.jar" value="lib" />
	<property name="javajar.source.depends" value="depends" />
	<property name="javajar.output.class" value="bin" />
	<property name="javajar.output.depend" value="" />
	<property name="javajar.output.directory" value="dist" />
	<property name="javajar.output.jarfile" value="${ant.project.name}.jar" />

	<path id="javajar.source.classpath">
		<fileset dir="." includes="${javajar.source.jar}/*.jar"/>
		<fileset dir="." includes="${javajar.source.depends}/*.jar"/>
	</path>
	<condition property="javajar.source.classpath.count">
		<resourcecount when="greater" count="0" refid="javajar.source.classpath"/>
	</condition>



	<fail message="set javajar.project.noexe or javajar.project.mainclass">
		<condition>
			<not>
				<or>
					<isset property="javajar.project.noexe"/>
					<isset property="javajar.project.mainclass"/>
				</or>
			</not>
		</condition>
	</fail>

	<target name="clean">
		<delete dir="${javajar.output.directory}" />
		<mkdir dir="${javajar.output.directory}" />
		<delete dir="${javajar.output.class}" />
		<mkdir dir="${javajar.output.class}" />
		<delete dir="${javajar.source.depends}" />
		<mkdir dir="${javajar.source.depends}" />
	</target>

	<target name="depend" depends="clean">
		<antcall target="depend-lib">
			<param name="javajar.global.debug" value="${javajar.global.debug}" />
		</antcall>
	</target>

	<!-- コンパイル -->
	<target name="compile" depends="clean,depend">
		<copy todir="${javajar.output.class}">
			<fileset dir="${javajar.source.java}" excludes="*.java"/>
		</copy>
		<echo message="debug=${javajar.global.debug}" />
		<javac debug="${javajar.global.debug}" debuglevel="lines,vars,source" encoding="UTF-8" srcdir="${javajar.source.java}" destdir="${javajar.output.class}" classpathref="javajar.source.classpath" includeantruntime="false" />
	</target>

	<!-- 実行 -->
	<target name="run" depends="compile" if="javajar.project.mainclass">
		<java classname="${javajar.project.mainclass}" classpathref="javajar.source.classpath" classpath="${javajar.output.class}">
			
		</java>
	</target>
    
	<!-- manifest -->
	<target name="manifest" depends="compile">
		<mkdir dir="${javajar.output.class}/META-INF" />
		<manifest file="${javajar.output.class}/META-INF/MANIFEST.MF" mode="update">
			<attribute name="Specification-Title" value="${javajar.project.name}"/>
			<attribute name="Implementation-Title" value="${javajar.project.name}"/>
			<attribute name="Specification-Version" value="${javajar.project.version}"/>
			<attribute name="Implementation-Version" value="${javajar.project.version}"/>
		</manifest>
		<antcall target="manifest-mainclass"/>
		<antcall target="manifest-classpath"/>
	</target>
	<target name="manifest-mainclass" if="javajar.project.mainclass">
		<manifest file="${javajar.output.class}/META-INF/MANIFEST.MF" mode="update">
			<attribute name="Main-Class" value="${javajar.project.mainclass}"/>
		</manifest>
	</target>
	<target name="manifest-classpath" if="javajar.source.classpath.count">
		<!-- 依存jarのコピー -->
		<copy todir="${javajar.output.directory}/${javajar.output.depend}" flatten="true">
			<path refid="javajar.source.classpath"/>
		</copy>
		<path id="javajar.output.classpath">
			<fileset dir="${javajar.output.directory}/${javajar.output.depend}" includes="*.jar"/>
		</path>
		<!-- manifest追記 -->
		<manifestclasspath property="javajar.output.classpath.manifest" jarfile="${javajar.output.directory}/${javajar.output.jarfile}">
			<classpath refid="javajar.output.classpath" />
		</manifestclasspath>
		<manifest file="${javajar.output.class}/META-INF/MANIFEST.MF" mode="update">
			<attribute name="Class-Path" value="${javajar.output.classpath.manifest}"/>
		</manifest>
	</target>

	<!-- jar -->
	<target name="jar" depends="manifest">
		<!-- jar生成 -->
		<jar update="true" destfile="${javajar.output.directory}/${javajar.output.jarfile}" basedir="${javajar.output.class}" manifest="${javajar.output.class}/META-INF/MANIFEST.MF"/>
	</target>

	<!-- JavaFX -->
	<target name="jar-fx" depends="compile,manifest" >
		<taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath="${java.home}/../lib/ant-javafx.jar"/>
		
		
		<fx:jar destfile="${javajar.output.directory}/${javajar.output.jarfile}">
			<fx:application name="${javajar.project.name}" mainClass="${javajar.project.mainclass}"/>
			<fileset dir="${javajar.output.class}"/>
			<fx:resources>
				<fx:fileset dir="${javajar.output.directory}" includes="${javajar.output.depend}/*.jar"/>
			</fx:resources>
			<manifest>
			</manifest>
		</fx:jar>
		
	</target>

	<!-- Ivy -->
	<property name="javajar.ivy.ver" value="2.4.0" />
	<property name="javajar.ivy.path" value="ivy-${javajar.ivy.ver}.jar" />
	<available file="${javajar.ivy.path}" property="javajar.ivy.exisits" />
	
	<target name="ivy-install" unless="javajar.ivy.exisits">
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${javajar.ivy.ver}/ivy-${javajar.ivy.ver}.jar" dest="${javajar.ivy.path}" usetimestamp="true"/>
	</target>

</project>
